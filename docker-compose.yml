version: "3.8"

services:
  # Сервис для MySQL
  mysql-auth:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword  # Устанавливаем пароль для root
      MYSQL_DATABASE: auth_db           # Имя базы данных
      MYSQL_USER: auth_user             # Имя пользователя
      MYSQL_PASSWORD: auth_password     # Пароль для пользователя
    volumes:
      - mysql_auth_data:/var/lib/mysql       # Монтируем том для сохранности данных  # Монтируем миграции
    ports:
      - "3306"                     # Открываем порт для внешних соединений
    networks:
      - app-network 
  
  mysql-log:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword  # Устанавливаем пароль для root
      MYSQL_DATABASE: log_db           # Имя базы данных
      MYSQL_USER: log_user             # Имя пользователя
      MYSQL_PASSWORD: log_password     # Пароль для пользователя
    volumes:
      - mysql_log_data:/var/lib/mysql       # Монтируем том для сохранности данных  # Монтируем миграции
    ports:
      - "3306"                     # Открываем порт для внешних соединений
    networks:
      - app-network 

  auth-server:
    build:
      context: ./auth  # Путь до директории с Dockerfile
      dockerfile: Dockerfile  # Явно указываем на Dockerfile в папке auth
    depends_on:
      - mysql-auth
    environment:
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_USER=auth_user
      - DATABASE_PASSWORD=auth_password
      - DATABASE_NAME=auth_db
    ports:
      - "50051"  # Порт для gRPC
    networks:
      - app-network
    volumes:
      - ./auth:/auth  # Монтируем код приложения

  log-server:
    build:
      context: ./log_storage  # Путь до директории с Dockerfile
      dockerfile: Dockerfile  # Явно указываем на Dockerfile в папке auth
    depends_on:
      - mysql-log
    environment:
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3307
      - DATABASE_USER=log_user
      - DATABASE_PASSWORD=log_password
      - DATABASE_NAME=log_db
    ports:
      - "50052"  # Порт для gRPC
    networks:
      - app-network
    volumes:
      - ./log_storage:/log_storage  # Монтируем код приложения

  nginx:
    image: nginx:latest
    container_name: nginx
    networks:
      - app-network  # Подключаемся к той же сети для общения с Auth Service
    ports:
      - "80:80"  # Открываем порт 80 для внешнего доступа
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - auth-server  
      - log-server


# Определяем том для хранения данных MySQL
volumes:
  mysql_auth_data:
  mysql_log_data:

# Определяем сеть для связи между сервисами
networks:
  app-network:
    driver: bridge
